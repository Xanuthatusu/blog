// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blog.proto

package blog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Post struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	DatePosted           *Date    `protobuf:"bytes,3,opt,name=date_posted,json=datePosted,proto3" json:"date_posted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Post) Reset()         { *m = Post{} }
func (m *Post) String() string { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()    {}
func (*Post) Descriptor() ([]byte, []int) {
	return fileDescriptor_blog_bc6d4847659f010d, []int{0}
}
func (m *Post) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Post.Unmarshal(m, b)
}
func (m *Post) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Post.Marshal(b, m, deterministic)
}
func (dst *Post) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Post.Merge(dst, src)
}
func (m *Post) XXX_Size() int {
	return xxx_messageInfo_Post.Size(m)
}
func (m *Post) XXX_DiscardUnknown() {
	xxx_messageInfo_Post.DiscardUnknown(m)
}

var xxx_messageInfo_Post proto.InternalMessageInfo

func (m *Post) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Post) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Post) GetDatePosted() *Date {
	if m != nil {
		return m.DatePosted
	}
	return nil
}

type Date struct {
	Year                 int32    `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month                int32    `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day                  int32    `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
	DateString           string   `protobuf:"bytes,5,opt,name=date_string,json=dateString,proto3" json:"date_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Date) Reset()         { *m = Date{} }
func (m *Date) String() string { return proto.CompactTextString(m) }
func (*Date) ProtoMessage()    {}
func (*Date) Descriptor() ([]byte, []int) {
	return fileDescriptor_blog_bc6d4847659f010d, []int{1}
}
func (m *Date) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Date.Unmarshal(m, b)
}
func (m *Date) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Date.Marshal(b, m, deterministic)
}
func (dst *Date) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Date.Merge(dst, src)
}
func (m *Date) XXX_Size() int {
	return xxx_messageInfo_Date.Size(m)
}
func (m *Date) XXX_DiscardUnknown() {
	xxx_messageInfo_Date.DiscardUnknown(m)
}

var xxx_messageInfo_Date proto.InternalMessageInfo

func (m *Date) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Date) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *Date) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *Date) GetDateString() string {
	if m != nil {
		return m.DateString
	}
	return ""
}

func init() {
	proto.RegisterType((*Post)(nil), "blog.Post")
	proto.RegisterType((*Date)(nil), "blog.Date")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlogClient is the client API for Blog service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlogClient interface {
	GetPost(ctx context.Context, in *Post, opts ...grpc.CallOption) (*Post, error)
}

type blogClient struct {
	cc *grpc.ClientConn
}

func NewBlogClient(cc *grpc.ClientConn) BlogClient {
	return &blogClient{cc}
}

func (c *blogClient) GetPost(ctx context.Context, in *Post, opts ...grpc.CallOption) (*Post, error) {
	out := new(Post)
	err := c.cc.Invoke(ctx, "/blog.Blog/GetPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlogServer is the server API for Blog service.
type BlogServer interface {
	GetPost(context.Context, *Post) (*Post, error)
}

func RegisterBlogServer(s *grpc.Server, srv BlogServer) {
	s.RegisterService(&_Blog_serviceDesc, srv)
}

func _Blog_GetPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Post)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServer).GetPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.Blog/GetPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServer).GetPost(ctx, req.(*Post))
	}
	return interceptor(ctx, in, info, handler)
}

var _Blog_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blog.Blog",
	HandlerType: (*BlogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPost",
			Handler:    _Blog_GetPost_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blog.proto",
}

func init() { proto.RegisterFile("blog.proto", fileDescriptor_blog_bc6d4847659f010d) }

var fileDescriptor_blog_bc6d4847659f010d = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xc1, 0x6a, 0x84, 0x30,
	0x10, 0x86, 0x89, 0x26, 0x2d, 0x1d, 0xa1, 0x94, 0xa1, 0x87, 0xd0, 0x4b, 0xad, 0x27, 0x4b, 0xc1,
	0x83, 0x7d, 0x83, 0x52, 0xe8, 0x55, 0xd2, 0x53, 0x4f, 0x25, 0x6e, 0x82, 0x1b, 0x70, 0x8d, 0xe8,
	0x5c, 0x7c, 0xfb, 0x25, 0xa3, 0x87, 0xbd, 0x7d, 0x33, 0x03, 0xdf, 0xfc, 0x3f, 0x40, 0x3f, 0xc6,
	0xa1, 0x99, 0x97, 0x48, 0x11, 0x65, 0xe2, 0xea, 0x0f, 0x64, 0x17, 0x57, 0xc2, 0x47, 0xc8, 0x82,
	0xd3, 0xa2, 0x14, 0xb5, 0x32, 0x59, 0x70, 0xf8, 0x0c, 0x8a, 0x02, 0x8d, 0x5e, 0x67, 0xa5, 0xa8,
	0x1f, 0xcc, 0x3e, 0xe0, 0x07, 0x14, 0xce, 0x92, 0xff, 0x9f, 0xe3, 0x4a, 0xde, 0xe9, 0xbc, 0x14,
	0x75, 0xd1, 0x42, 0xc3, 0xd6, 0x6f, 0x4b, 0xde, 0x40, 0x3a, 0x77, 0x7c, 0xad, 0x4e, 0x20, 0xd3,
	0x0e, 0x11, 0xe4, 0xe6, 0xed, 0x72, 0xc8, 0x99, 0x93, 0xfe, 0x12, 0x27, 0x3a, 0xb3, 0x5e, 0x99,
	0x7d, 0xc0, 0x27, 0xc8, 0x9d, 0xdd, 0x58, 0xab, 0x4c, 0x42, 0x7c, 0x3d, 0x1e, 0xae, 0xb4, 0x84,
	0x69, 0xd0, 0x8a, 0xc3, 0xf0, 0x93, 0x5f, 0xde, 0xb4, 0xef, 0x20, 0xbf, 0xc6, 0x38, 0xe0, 0x1b,
	0xdc, 0xff, 0x78, 0xe2, 0x2a, 0x47, 0x9e, 0xc4, 0x2f, 0x37, 0xdc, 0xdf, 0x71, 0xef, 0xcf, 0x6b,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x30, 0x55, 0xe7, 0x05, 0x01, 0x00, 0x00,
}
